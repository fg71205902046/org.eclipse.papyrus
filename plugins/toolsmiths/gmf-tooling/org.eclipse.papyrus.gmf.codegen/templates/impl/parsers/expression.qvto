/******************************************************************************
 * Copyright (c) 2007, 2020 Borland Software Corporation, CEA LIST, Artal
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/ 
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors: 
 *    Michael Golubev (Montages) - initial API and implementation
 *    Aurelien Didier (ARTAL) - aurelien.didier51@gmail.com - Bug 569174
 *****************************************************************************/
import xpt.diagram.Utils;
modeltype gmfgen uses "http://www.eclipse.org/papyrus/gmf/2020/GenModel";
library expression;

helper gmfgen::ExpressionLabelParser::isViewExpressionDefinedAndOcl() : Boolean {
	return not(self.viewExpression.oclIsUndefined()) and self.viewExpression.provider.oclIsKindOf(gmfgen::GenExpressionInterpreter);
}

helper gmfgen::GenParserImplementation::isViewExpressionDefinedAndOcl() : Boolean {
	return false;
}	

helper gmfgen::GenCommonBase::isViewExpressionDefiedAndOcl() : Boolean {
	return let labelModelFacet : gmfgen::LabelModelFacet 
		= if self.oclIsKindOf(gmfgen::GenChildLabelNode) then self.oclAsType(gmfgen::GenChildLabelNode).labelModelFacet 
	      else (if self.oclIsKindOf(gmfgen::GenLabel) then self.oclAsType(gmfgen::GenLabel).modelFacet 
	 	  else null 
	 	  endif)
	 	  endif	 	      
	in if labelModelFacet = null 
			   then false 
			   else labelModelFacet.parser.isViewExpressionDefinedAndOcl()
		  	   endif;
}

