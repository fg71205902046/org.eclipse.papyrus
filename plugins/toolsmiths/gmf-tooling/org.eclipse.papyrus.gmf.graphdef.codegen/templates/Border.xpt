/******************************************************************************
 * Copyright (c) 2006, 2020 Borland Software Corporation, CEA LIST, Artal
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/ 
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors: 
 *    Artem Tikhomirov (Borland) - initial API and implementation
 *    Aurelien Didier (ARTAL) - aurelien.didier51@gmail.com - Bug 569174
 *****************************************************************************/

«IMPORT 'http://www.eclipse.org/papyrus/gmf/2020/GraphicalDefinition'»
«IMPORT 'http://www.eclipse.org/emf/2002/Ecore'»
«EXTENSION Util»

«DEFINE Init(figureVarName : String) FOR gmfgraph::Border-»
«figureVarName».setBorder(«EXPAND border(figureVarName)»);
«ENDDEFINE»

«DEFINE InitMethods FOR gmfgraph::Figure»
«FOREACH getBordersInUse() AS b»«EXPAND initMethod((getBordersInUse()->indexOf(b) - 1)) FOR b»«ENDFOREACH-»
«ENDDEFINE»

«DEFINE initMethod(c : Integer) FOR gmfgraph::CustomBorder-»
	/**
	 * @generated
	 */
	private org.eclipse.draw2d.Border createBorder«c»() {
		«EXPAND Runtime::newInstance('result')»
		«EXPAND attr::CustomClass::Init('result')»
		return result;
	}
«ENDDEFINE»

«DEFINE border(figureVarName : String) FOR gmfgraph::Border»
«ERROR 'This is an abstract definition border(String, Border) invoked for ' + self.repr()»
«ENDDEFINE»

«DEFINE border(figureVarName : String) FOR gmfgraph::LineBorder-»
new org.eclipse.draw2d.LineBorder(«IF null = color»null«ELSE»«EXPAND attr::Figure::color(figureVarName.toUpper() + '_BORDER') FOR color»«ENDIF», «EXPAND MapMode::_map FOR width»)«ENDDEFINE»

«DEFINE border(figureVarName : String) FOR gmfgraph::MarginBorder-»
new org.eclipse.draw2d.MarginBorder(«EXPAND MapMode::_map FOR insets»)«ENDDEFINE»

«DEFINE border(figureVarName : String) FOR gmfgraph::CompoundBorder-»
new org.eclipse.draw2d.CompoundBorder(«IF outer = null»null«ELSE»«EXPAND border(figureVarName) FOR outer»«ENDIF», «IF inner = null»null«ELSE»«EXPAND border(figureVarName) FOR inner»«ENDIF»)
«ENDDEFINE»

«DEFINE border(figureVarName : String) FOR gmfgraph::CustomBorder-»
createBorder«getBordersInUse()->size()»()«addBorder(self)-»
«ENDDEFINE»

«DEFINE border(figureVarName : String) FOR gmfgraph::BorderRef-»
«EXPAND border(figureVarName) FOR actual-»
«ENDDEFINE»